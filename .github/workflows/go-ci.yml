name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3' # Specify the version of Go you want to use

      - name: Install Dependencies
        run: |
          go mod download

      - name: Run Tests
        run: |
          go test ./... -v

  lint:
    name: Run Go Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'

      - name: Install GolangCI-Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0

      - name: Run GolangCI-Lint
        run: |
          golangci-lint run ./...

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'  # Use your project's Go version

      - name: Run tests
        run: go test ./...

      - name: Build for Linux
        run: make app-linux

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-linux
          path: ./bin/app-linux-amd64

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: app-linux

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y ssh

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Sync repository files to the server
        run: |
          rsync -avz --delete --exclude '.git' --exclude 'node_modules' ./ root@${{ secrets.SERVER_IP }}:/opt/check-tc/

      - name: Run make command on the server
        run: |
          ssh root@${{ secrets.SERVER_IP }} "cd /opt/check-tc && make app-linux"

      - name: Sync systemd service file
        run: |
          rsync -avz ./deployment/systemd/check-tc.service root@${{ secrets.SERVER_IP }}:/etc/systemd/system/check-tc.service

      - name: Restart the systemd service
        run: |
          ssh root@${{ secrets.SERVER_IP }} "systemctl daemon-reload && systemctl restart check-tc.service && systemctl status check-tc.service"